/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FinalGUI;

import javax.swing.JOptionPane;

/**
 *
 * @author Options
 */
public class algorithmsFrame extends javax.swing.JFrame {

    /**
     * Creates new form algorithmsFrame
     */
    public algorithmsFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        plain = new javax.swing.JTextField();
        cipher = new javax.swing.JTextField();
        key = new javax.swing.JTextField();
        Function_Combo = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("plaintext:");

        jLabel2.setText("ciphertext:");

        jLabel3.setText("key:");

        jLabel4.setText("Algorithms:");

        jLabel5.setText("functions:");

        cipher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cipherActionPerformed(evt);
            }
        });

        Function_Combo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose algorithm", "Ceaser", "Playfair", "DES", "RC4", "RSA" }));
        Function_Combo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Function_ComboActionPerformed(evt);
            }
        });

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose function", "AND", "OR", "XOR" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jButton1.setText("ENCRYPTION");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("DECRYPTION");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("clear");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5))
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(plain, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jButton3)
                                        .addGap(16, 16, 16))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cipher, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(key, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 167, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE))))
                                .addGap(27, 27, 27))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Function_Combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(plain, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(cipher, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(key, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(Function_Combo, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addGap(31, 31, 31))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cipherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cipherActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cipherActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
                if (Function_Combo.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Enter the choice technology .", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (Function_Combo.getSelectedIndex() == 1) {
            String f;
            if (key.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Enter the keyword please!"
                        + "\nkeyword must be integer.", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (!(plain.getText().equals(""))) {
                f = CaesarCipher.encrypt_Caeser(plain.getText(), Integer.parseInt(key.getText()) % 26);
                cipher.setText(f);
            } else {
                JOptionPane.showMessageDialog(null, "Enter the text you want to "
                        + "be encoded ,please!", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else if (Function_Combo.getSelectedIndex() == 2) {
            String s;
            if (key.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Enter the keyword please!"
                        + "\nkeyword must be string.", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (!(plain.getText().equals(""))) {
                PlayFairCipher playfair = new PlayFairCipher();
                s = playfair.encode_Playfair(plain.getText(), key.getText());
                cipher.setText(s);
            } else {
                JOptionPane.showMessageDialog(null, "Enter the text you want to"
                        + " be encoded ,please!", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else if (Function_Combo.getSelectedIndex() == 3) {
            String s;
            if (key.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Enter the keyword please!\nkeyword must be string.", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (!(plain.getText().equals(""))) {
                s = Feistel.FeistelCipher(plain.getText(), key.getText(), Function_Combo.getSelectedItem().toString());
                cipher.setText(s);
            } else if (Function_Combo.getSelectedIndex() == 0) {
                JOptionPane.showMessageDialog(null, "Enter the function ,please!", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "Enter the text you want to be decoded ,please!", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else if (Function_Combo.getSelectedIndex() == 4) {
            String s;
            if (key.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Enter the keyword please!"
                        + "\nkeyword must be string.", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (!(plain.getText().equals(""))) {
                s = DES.encription(plain.getText(), key.getText());
                cipher.setText(s);
            } else {
                JOptionPane.showMessageDialog(null, "Enter the text you want to"
                        + " be encoded ,please!", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else if (Function_Combo.getSelectedIndex() == 5) {
            String s;
            if (key.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Enter the keyword please!"
                        + "\nkeyword must be string.", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (!(plain.getText().equals(""))) {
                s = RC4.Encryption_Decryption(plain.getText(), key.getText());
                cipher.setText(s);
            } else {
                JOptionPane.showMessageDialog(null, "Enter the text you want to"
                        + " be encoded ,please!", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else if (Function_Combo.getSelectedIndex() == 6) {
            if (!(plain.getText().equals(""))) {
                RSA rsa = new RSA();

                System.out.println("plain : " + plain.getText());
                String f = rsa.RSA(4, plain.getText(), "e");
                cipher.setText(f);
            } else {
                JOptionPane.showMessageDialog(null, "Enter the text please!", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
       
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        plain.setText("");
        key.setText("");
        cipher.setText("");
        Function_Combo.setSelectedIndex(0);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void Function_ComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Function_ComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Function_ComboActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if (Function_Combo.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Enter the choice technology ."
                    + "", "Error", JOptionPane.ERROR_MESSAGE);

        }//caesar decryption
        else if (Function_Combo.getSelectedIndex() == 1) {
            String f;
            if (key.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Enter the keyword please!"
                        + "\nkeyword must be integer.", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (!(cipher.getText().equals(""))) {
                f = CaesarCipher.decrypt_Caeser(cipher.getText(), Integer.parseInt(key.getText()) % 26);
                plain.setText(f);
            } else {
                JOptionPane.showMessageDialog(null, "Enter the text you want to "
                        + "be decoded ,please!", "Error", JOptionPane.ERROR_MESSAGE);
            }

        } //playfair decryption
        else if (Function_Combo.getSelectedIndex() == 2) {
            String s;
            if (key.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Enter the keyword please!"
                        + "\nkeyword must be string.", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (!(cipher.getText().equals(""))) {
                PlayFairCipher playfair = new PlayFairCipher();
                s = playfair.decode_Playfair(cipher.getText(), key.getText());
                plain.setText(s);
            } else {
                JOptionPane.showMessageDialog(null, "Enter the text you want to be "
                        + "decoded ,please!", "Error", JOptionPane.ERROR_MESSAGE);
            }
            //fiestel cipher
        } else if (Function_Combo.getSelectedIndex() == 3) {
            String s;
            if (key.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Enter the keyword please!"
                        + "\nkeyword must be string.", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (!(cipher.getText().equals(""))) {
                s = Feistel.FeistelCipher(cipher.getText(), key.getText(), Function_Combo.getSelectedItem().toString());
                plain.setText(s);
            } else if (Function_Combo.getSelectedIndex() == 0) {
                JOptionPane.showMessageDialog(null, "Enter the function ,please!", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "Enter the text you want to be "
                        + "decoded ,please!", "Error", JOptionPane.ERROR_MESSAGE);
            }
            //des cipher
        } else if (Function_Combo.getSelectedIndex() == 4) {
            String s;
            if (key.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Enter the keyword please!"
                        + "\nkeyword must be string.", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (!(cipher.getText().equals(""))) {
                s = DES.decription(cipher.getText(), key.getText());
                plain.setText(s);
            } else {
                JOptionPane.showMessageDialog(null, "Enter the text you want to be "
                        + "decoded ,please!", "Error", JOptionPane.ERROR_MESSAGE);
            }
            //rc4 cipher
        } else if (Function_Combo.getSelectedIndex() == 5) {
            String s;
            if (key.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Enter the keyword please!"
                        + "\nkeyword must be string.", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (!(cipher.getText().equals(""))) {
                s = RC4.Encryption_Decryption(cipher.getText(), key.getText());
                plain.setText(s);
            } else {
                JOptionPane.showMessageDialog(null, "Enter the text you want to be "
                        + "decoded ,please!", "Error", JOptionPane.ERROR_MESSAGE);
            }
            //RSA cipher
        } else if (Function_Combo.getSelectedIndex() == 6) {
            if (!(cipher.getText().equals(""))) {
                RSA rsa = new RSA();
                System.out.println("cipher : " + cipher.getText());
                String f = rsa.RSA(4, cipher.getText(), "D");
                plain.setText(f);
            } else {
                JOptionPane.showMessageDialog(null, "Enter the text please!", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(algorithmsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(algorithmsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(algorithmsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(algorithmsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new algorithmsFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Function_Combo;
    private javax.swing.JTextField cipher;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField key;
    private javax.swing.JTextField plain;
    // End of variables declaration//GEN-END:variables
}
